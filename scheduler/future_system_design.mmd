graph TD
    lambda_function[lambda_function.py] --> StrategyFactory[Strategy Factory]
    StrategyFactory -->|selects| priority_strategy[priority_strategy.py]
    StrategyFactory -->|selects| other_strategies[Other Strategies]
    
    priority_strategy -->|inherits| strategy[strategy.py]
    strategy -->|interacts with| DBFactory[Database Factory]
    
    DBFactory -->|creates| notion_dbs[notion_dbs]
    notion_dbs -->|parent class| database[database.py]
    
    subgraph adapters
        caldav_adapter[caldav_adapter.py]
        mongodb_adapter[mongodb_adapter.py]
    end
    
    subgraph notion_dbs
        courses_database[courses_database.py]
        job_tasks_database[job_tasks_database.py]
        jobs_database[jobs_database.py]
        lecture_notes_database[lecture_notes_database.py]
        personal_database[personal_database.py]
        priorities_database[priorities_database.py]
        recurring_database[recurring_database.py]
        routine_database[routine_database.py]
        schedule_database[schedule_database.py]
        sports_database[sports_database.py]
        todo_database[todo_database.py]
    end
    
    subgraph strategies
        priority_strategy
        other_strategies[Other Strategies...]
    end
    
    strategy --> AdapterInterface[Adapter Interface]
    AdapterInterface --> caldav_adapter
    AdapterInterface --> mongodb_adapter
    
    class adapters singleton;
    class strategies strategyPattern;
