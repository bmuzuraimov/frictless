# name: Deploy to AWS Lambda

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-1

#       - name: Build Docker image
#         run: |
#           IMAGE_NAME="acuella"
#           LOCAL_TAG=$(date +%Y-%m-%d-%H-%M-%S)
#           docker build --platform linux/amd64 -t $IMAGE_NAME:$LOCAL_TAG .

#       - name: Tag Docker image
#         run: |
#           ECR_NAME="acuella_test"
#           ACCOUNT_ID="535139857701"
#           AWS_TAG=$(date +%Y-%m-%d-%H-%M-%S)
#           AWS_ECR_URI="$ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com/$ECR_NAME"
#           docker tag $IMAGE_NAME:$LOCAL_TAG $AWS_ECR_URI:$AWS_TAG

#       - name: Push Docker image to ECR
#         run: |
#           AWS_ECR_URI="$ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com/$ECR_NAME"
#           aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_ECR_URI
#           docker push $AWS_ECR_URI:$AWS_TAG

#       - name: Deploy to Lambda
#         run: |
#           LAMBDA_NAME="acuella_test"
#           aws lambda update-function-code --function-name $LAMBDA_NAME --image-uri $AWS_ECR_URI:$AWS_TAG

#       - name: Clean up Docker images
#         run: |
#           docker rmi $IMAGE_NAME:$LOCAL_TAG
#           docker rmi $AWS_ECR_URI:$AWS_TAG